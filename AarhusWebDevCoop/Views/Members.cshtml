@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Members>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using Umbraco.Core;
@using Umbraco.Core.Models;
@using Umbraco.Core.Services;
@using Newtonsoft.Json;
@using Umbraco.Web.Models;
@{
  Layout = "master.cshtml";
}

<div class="container pt-4 pb-4">
@{
    <h1>Active Members</h1>
    var memberService = ApplicationContext.Current.Services.MemberService;
    var members = memberService.GetMembersByMemberType("active");
    var prospects = memberService.GetMembersByMemberType("prospect");
    
    foreach (var member in members)
    {
        if (member.GetValue("photo") != null)
        {
            string image = member.GetValue<string>("photo");
            ImageCropDataSet imageCrops = JsonConvert.DeserializeObject<ImageCropDataSet>(image);
            string imagePath = imageCrops.Src.GetCropUrl(width: 100);
            <img src="@imagePath" /><br />
        }
        String[] skills = member.GetValue("skills").ToString().Split(',');
        string skillString = string.Join(", ", from skill in skills select umbraco.library.GetPreValueAsString(Convert.ToInt32(skill)));
        <p>
            <b>Name: </b> @member.Name<br />
            <b>Address: </b> @member.GetValue("address"), @member.GetValue("zip"), @member.GetValue("city") <br />
            <b>Email: </b> @member.Email<br />
            <b>Skills: </b> <span>@skillString</span> <br /><br />
        </p>
    }
}
</div>